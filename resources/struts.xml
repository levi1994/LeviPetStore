<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE struts PUBLIC  
    "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"  
    "http://struts.apache.org/dtds/struts-2.3dtd">  
<struts>  
    <!-- 配置为开发模式 -->  
    <constant name="struts.devMode" value="true" />  
    <!-- 配置扩展名为action -->  
    <constant name="struts.action.extension" value="action" />  
    <!-- 配置主题 -->
    <constant name="struts.ui.theme" value="simple" />  
    <!-- 配置上传文件大小此处默认为20M -->
    <constant name="struts.multipart.maxSize" value="2097152" />
    <!-- 国际化编码 -->
    <constant name="struts.i18n.encoding" value="UTF-8" />     
    <!-- 定位视图资源的根路径。默认值为/WEB-INF/content -->     
    <constant value="/WEB-INF/templates" name="struts.convention.result.path" />     
    <!-- 指定convention扫描以xxx结尾的包 -->
    <constant value="action" name="struts.convention.package.locators" />     
    <!-- 是否将Action类转换成小写 -->
    <constant value="false" name="struts.convention.package.lowercase" />
    <!-- 是否将actionName分割,去掉action部分,以大写字母作为分割 -->  
    <constant name="struts.convention.action.name.separator" value="_" />  
    <!-- 浏览器是否缓存静态内容 ，开发阶段最好关闭-->  
    <constant name="struts.serve.static.browserCache" value="false"/>  
    <!-- 当struts的配置文件修改后,系统是否自动重新加载该文件,默认值为false(生产环境下使用),开发阶段最好打开 -->   
    <constant name="struts.configuration.xml.reload" value="true"/>
    <!-- 配置使用Spring管理Action!!!!!!!!!!!!!!!!!! -->
    <constant name="struts.objectFactory" value="spring"/>
    <!-- 让struts2始终先考虑spring的自动装箱-->  
    <constant name="struts.objectFactory.spring.autoWire.alwaysRespect" value="true" />
    <!-- 设置默认的父包  
    <constant value="MAIN" name="struts.convention.default.parent.package" />  
    <package name="MAIN" extends="struts-default" namespace="/">  
    </package>  
     -->  
  
      
    <package name="default" namespace="/" extends="struts-default">  
        <interceptors>
            <!--  声明一个拦截器   进行登录检查  -->  
          <!--   <interceptor name="checkePrivilege" class="com.oa168.interceptor.CheckPrivilegeInterceptor"></interceptor>   -->
            <!--  重新定义defaultStack拦截器栈，需要先判断权限    -->   
            <interceptor-stack name="defaultStack">
               <!--  <interceptor-ref name="checkePrivilege" />   -->
                <interceptor-ref name="defaultStack" />
            </interceptor-stack>
        </interceptors>  
        <!-- 配置全局的Result -->  
       <!--  <global-results>  
           <result name="loginUI">/WEB-INF/jsp/userAction/loginUI.jsp</result> 
            <result name="noPrivilegeError">/noPrivilegeError.jsp</result>
        </global-results>   -->
          
        <!-- 测试用的action，当与Spring整合后，class属性写的就是Spring中bean的名称   
             不需要写com.oa168.test.TestAction形式  
             所以整合就是在Action类中加入@Controller  @Scope("prototype")  
             并在Web.xml中加入监听器  
        <listener>  
            <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
        </listener>  
        <context-param>  
            <param-name>contextConfigLocation</param-name>  
            <param-value>classpath:applicationContext*.xml</param-value>  
        </context-param>  
           -->  
        <action name="test" class="testAction">  
            <result name="success">/index.jsp</result>  
        </action>   
        <!-- 首页 -->  
        <action name="homeAction_*" class="homeAction" method="{1}">  
            <result name="{1}">/WEB-INF/jsp/homeAction/{1}.jsp</result>  
            <!--   
            <result name="index">/WEB-INF/jsp/homeAction/Index.jsp</result>  
            <result name="top">/WEB-INF/jsp/homeAction/Top.jsp</result>  
            <result name="bottom">/WEB-INF/jsp/homeAction/Bottom.jsp</result>  
            <result name="left">/WEB-INF/jsp/homeAction/Left.jsp</result>  
            <result name="mainFrame">/WEB-INF/jsp/homeAction/MainFrame.jsp</result> -->  
        </action>  
           
    </package>  
  
</struts>  